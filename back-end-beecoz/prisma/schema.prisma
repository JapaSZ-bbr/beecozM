// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//TABELA LOGIN E TABELA USERTIPO

enum Level {
  Beginner
  Intermediate
  Queen
}

model TypeUser {
  id         Int          @id @default(autoincrement()) @map("tb_usertype_id")
  level      Level        @map("tb_usertype_level")
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  autonomous Autonomous[]
  client     Client[]

  @@map("tb_usertype")
}

model ClientProfile {
  id         Int      @id @default(autoincrement()) @map("tb_client_profiles_id")
  biography  String   @map("tb_client_profiles_bio")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  client     Client?

  @@map("tb_client_profiles")
}

//TABELA PERFIL CLIENTE E AUTONOMO

model AutonomousProfile {
  id         Int         @id @default(autoincrement()) @map("tb_autonomous_profiles_id")
  biography  String      @map("tb_autonomous_profiles_bio")
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  autonomous Autonomous?

  @@map("tb_autonomous_profiles")
}

//TABELA AUTONOMO E CLIENTE

enum Gender {
  Male
  Female
}

model Autonomous {
  id         Int               @id @default(autoincrement()) @map("tb_autonomous_id")
  name       String            @map("tb_autonomous_name") @db.VarChar(20)
  lastName   String            @map("tb_autonomous_lastname") @db.VarChar(60)
  login      String            @unique @map("tb_autonomous_login") @db.VarChar(60)
  password   String            @map("tb_autonomous_password") @db.VarChar(60)
  gender     Gender
  bornDate   DateTime          @map("tb_autonomous_borndate") @db.Date
  cpf        String            @map("tb_autonomous_cpf")
  cnpj       String?           @map("tb_autonomous_cnpj")
  created_at DateTime          @default(now())
  updated_at DateTime          @updatedAt
  profile    AutonomousProfile @relation(fields: [profileId], references: [id])
  profileId  Int               @unique
  type       TypeUser          @relation(fields: [typeId], references: [id])
  typeId     Int
  service    Service[]
  interest   Interest[]

  @@map("tb_autonomous")
}

model Client {
  id          Int           @id @default(autoincrement()) @map("tb_clients_id")
  name        String        @map("tb_clients_name") @db.VarChar(20)
  lastName    String        @map("tb_clients_lastname") @db.VarChar(60)
  login       String        @unique @map("tb_clients_login") @db.VarChar(60)
  password    String        @map("tb_clients_password") @db.VarChar(60)
  gender      Gender
  bornDate    DateTime      @map("tb_clients_borndate") @db.Date
  cpf         String        @map("tb_clients_cpf")
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  profile     ClientProfile @relation(fields: [profileId], references: [id])
  profileId   Int           @unique
  type        TypeUser      @relation(fields: [typeId], references: [id])
  typeId      Int
  publication Publication[]

  @@map("tb_clients")
}

//TABELAS SERVICOS

model ServiceType {
  id          Int           @id @default(autoincrement()) @map("tb_servtypes_id")
  name        String        @map("tb_servtypes_name") @db.VarChar(60)
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  service     Service[]
  publication Publication[]

  @@map("tb_servtypes")
}

model Service {
  id           Int         @id @default(autoincrement()) @map("tb_services_id")
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  autonomous   Autonomous  @relation(fields: [autonomousId], references: [id])
  autonomousId Int         @unique
  serviceType  ServiceType @relation(fields: [servTypeId], references: [id])
  servTypeId   Int

  @@map("tb_services")
}

//TABELA PUBLICACAO E INTERESSE

model Publication {
  id          Int         @id @default(autoincrement()) @map("tb_publications_id")
  title       String      @map("tb_publications_title") @db.VarChar(30)
  description String      @map("tb_publications_desc")
  region      String
  data        DateTime    @map("tb_publications_data") @db.Date
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  servType    ServiceType @relation(fields: [servTypeId], references: [id])
  servTypeId  Int
  client      Client      @relation(fields: [clientId], references: [id])
  clientId    Int         
  interest    Interest[]
  type        Level       @map("tb_publication_type")
  status Status @map("tb_publication_status")

  @@map("tb_publications")
}

model Interest {
  id            Int         @id @default(autoincrement()) @map("tb_interests_id")
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  publication   Publication @relation(fields: [publicationId], references: [id])
  publicationId Int
  autonomous    Autonomous  @relation(fields: [autonomousId], references: [id])
  autonomousId  Int
  work          Work?

  @@map("tb_interests")
}

//TABELA CHAT

model chat {
  id         Int      @id @default(autoincrement()) @map("tb_chat_id")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  hour       DateTime @default(now()) @map("tb_chat_hour")
  message    Bytes    @map("tb_chat_message")

  @@map("tb_chat")
}

//TABELA AVALIACAO E TRABALHO

model Rating {
  id         Int      @id @default(autoincrement()) @map("tb_ratings_id")
  stars      Int      @map("tb_ratings_stars")
  comment    String?  @map("tb_ratings_comment")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  work       Work[]

  @@map("tb_ratings")
}

enum Status {
  Progress
  Completed
  Open
}

model Work {
  id         Int      @id @default(autoincrement()) @map("tb_works_id")
  status     Status
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  interest   Interest @relation(fields: [interestId], references: [id])
  interestId Int      @unique
  rating     Rating   @relation(fields: [ratingId], references: [id])
  ratingId   Int

  @@map("tb_works")
}
